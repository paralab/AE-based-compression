train_dataset:
  dataset:
    name: math-function-3d
    args:
      k_values: [2, 3, 4, 5, 6]
      resolution: 40  # Input resolution 40x40x40
      num_functions: 1000
      repeat: 20
      cache: in_memory
      diagonal_only: true  # Only use k1=k2=k3 combinations
  wrapper:
    name: math-function-3d-downsampled
    args:
      inp_size: 20  # Downsample to 20x20x20
      scale_max: 2  # 2x super-resolution (20x20x20 -> 40x40x40)
      augment: true
      sample_q: 4000  # Sample 4000 points for training
  batch_size: 4  # Smaller batch size for 3D

val_dataset:
  dataset:
    name: math-function-3d
    args:
      k_values: [2, 3, 4, 5, 6]
      resolution: 40
      num_functions: 100
      repeat: 160
      cache: in_memory
      diagonal_only: true
  wrapper:
    name: math-function-3d-downsampled
    args:
      inp_size: 20
      scale_max: 2
      sample_q: 4000
  batch_size: 4

data_norm:
  inp: {sub: [0.0], div: [1.0]}
  gt: {sub: [0.0], div: [1.0]}

model:
  name: liif-3d
  args:
    encoder_spec:
      name: swae-encoder-3d
      args:
        input_channels: 1
        hidden_channels: [32, 64, 128]
        no_upsampling: true
    imnet_spec:
      name: thera-3d-simple
      args:
        out_dim: 1
        hidden_dim: 256
        num_frequencies: 64
        kappa: 1.0

optimizer:
  name: adam
  args:
    lr: 1.e-4
    
epoch_max: 500
multi_step_lr:
  milestones: [100, 200, 300, 400]
  gamma: 0.5

epoch_val: 10
epoch_save: 50 